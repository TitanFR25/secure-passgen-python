import random

def generatePassword():
    # On demande √† l'utilisateur la longueur du mot de passe
    try:
        longueur = int(input("Quelle longueur voulez-vous pour votre mot de passe ? (minimum 10 / maximum 40) : "))
    except ValueError:
        print("‚ùå Erreur : veuillez entrer un nombre entier.")
        exit()

    # On v√©rifie que la longueur choisie respecte les r√®gles
    if longueur < 10 or longueur > 40:
        print("‚ùå Erreur : le mot de passe doit contenir entre 10 et 40 caract√®res.")
        exit()
        
    # On d√©finit les types de caract√®res √† utiliser
    lettres = "azertyuiopqsdfghjklmwxcvbn"
    lettreMaj = lettres.upper()
    chiffres = "123456789"
    symboles = ",.@#$*"

    # On regroupe tous les caract√®res possibles dans une seule variable
    caracteres = lettres + lettreMaj + chiffres + symboles

    # On ajoute au minimum un caract√®re de chaque type
    mot_de_passe = [
    random.choice(lettres),
    random.choice(lettreMaj),
    random.choice(chiffres),
    random.choice(symboles)
    ]

     # On calcule le nombre de caract√®res restants √† g√©n√©rer
    reste = longueur - 4

    #Stocker le tableau du mot de passe dans la variable pour un gain de ressource minime
    motDePasse = mot_de_passe

    # On compl√®te le reste du mot de passe avec des caract√®res al√©atoires
    for _ in range(reste):
        #completer le mot de passe
        motDePasse.append(random.choice(caracteres))

    # On m√©lange les caract√®res
    random.shuffle(motDePasse)

    # On transforme la liste en cha√Æne de caract√®res
    mot_de_passe_final = "".join(motDePasse)

    # On affiche le mot de passe g√©n√©r√©
    print("üîê Voici le mot de passe (copiez-le si vous voulez le chiffrer) :", mot_de_passe_final)
    return mot_de_passe_final